name: Build main or features

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  qa:
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v3

      - name: Scaning code
        uses: aquasecurity/trivy-action@0.2.0
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "table"
          template: "@/contrib/sarif.tpl"
          severity: "MEDIUM,HIGH,CRITICAL"

      - name: Detecting secrets
        uses: reviewdog/action-detect-secrets@v0.7
        with:
          reporter: github-check
          github_token: ${{ secrets.github_token }}
          fail_on_error: true
          detect_secrets_flags: --exclude-files .git

  build-container:
    needs:
      - qa
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: false
          tags: ${GITHUB_REPOSITORY}:${GITHUB_SHA}

      # - name: Containerizing
      #   id: containerizing
      #   run: |
      #     docker build -t "${GITHUB_REPOSITORY}:${GITHUB_SHA}" --build-arg NAME="${GITHUB_REPOSITORY}" --build-arg CREATED="n/a" --build-arg TITLE="Wordcloud-cli docker wrapper" --build-arg REVISION="${GITHUB_SHA}" --build-arg BUILD_URL="${GITHUB_JOB}" --build-arg SOURCE="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" .

      - name: Scaning image tar
        uses: aquasecurity/trivy-action@0.2.1
        with:
          image-ref: ${GITHUB_REPOSITORY}:${GITHUB_SHA}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          severity: "MEDIUM,HIGH,CRITICAL"
          vuln-type: "os,library"

      - name: Push image
        run: |
          echo "foo"
      #       echo $DOCKERHUB_LOGIN_PASSWORD | docker login --username koenighotze --password-stdin
      #       docker push $IMAGE_NAME:$CIRCLE_SHA1
      #       docker push $IMAGE_NAME:$RELEASE_TAG
